[versions]
atomicfu = "0.22.0"
binary-compatibility-validator = "0.13.2"
dokka = "1.9.10"
hexagon = "3.0.3"
html-reporter = "0.7.1"
kotlin = "1.9.20"
kotest = "5.8.0"
kover = "0.7.4"
kotlin-coroutines = "1.7.3"
kotlin-datetime = "0.4.1"
kotlin-serialisation = "1.6.0"
reckon = "0.18.1"
slf4j = "2.0.9"
spotless = "6.22.0"
test-logger = "3.2.0"

[libraries]
hexagon-core = { module = "com.hexagonkt:core", version.ref = "hexagon" }
html-reporter = { module = "com.michaelstrasser:kotest-html-reporter", version.ref = "html-reporter" }
kotest-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-junit = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-xml = { module = "io.kotest:kotest-extensions-junitxml-jvm", version.ref = "kotest" }
kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }
kotlin-serialisation-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "kotlin-serialisation" }
kotlin-serialisation-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialisation" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

# Gradle plugins used by convention plugins
kotlin-dokka-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
reckon-gradle-plugin = { module = "org.ajoberstar.reckon:reckon-gradle", version.ref = "reckon" }
spotless-gradle-plugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
testlogger-gradle-plugin = { module = "com.adarshr:gradle-test-logger-plugin", version.ref = "test-logger" }

[plugins]
binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binary-compatibility-validator" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
serialisation = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
testLogger = { id = "com.adarshr.test-logger", version.ref = "test-logger" }
